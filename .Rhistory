dplyr::mutate(!!text_col := stringr::str_replace_all(.data[[text_col]], "\\n", ""))
tbl <-
tbl %>%
dplyr::select(dplyr::all_of(text_col)) %>%
mecab(bin_dir, tmp_dir, fileEncoding)
tbl <- neko
text_col <- "text"
tmp_dir <- NULL
tbl <- dplyr::mutate(tbl, text_id=1:nrow(tbl))
others <- dplyr::select(tbl, !dplyr::all_of(text_col))
if(stringr::str_detect(stringr::str_c(tbl[[text_col]], collapse=FALSE), "\\r\\n")) message("Removed line breaks !")
if(stringr::str_detect(stringr::str_c(tbl[[text_col]], collapse=FALSE), "\\n"))    message("Removed line breaks !")
tbl <-  # remove line breaks
tbl %>%
dplyr::mutate(!!text_col := stringr::str_replace_all(.data[[text_col]], "\\r\\n", "")) %>%
dplyr::mutate(!!text_col := stringr::str_replace_all(.data[[text_col]], "\\n", ""))
tbl <-
tbl %>%
dplyr::select(dplyr::all_of(text_col)) %>%
mecab(bin_dir, tmp_dir, fileEncoding)
tbl <- neko
text_col <- "text"
tmp_dir <- NULL
tbl <- dplyr::mutate(tbl, text_id=1:nrow(tbl))
others <- dplyr::select(tbl, !dplyr::all_of(text_col))
if(stringr::str_detect(stringr::str_c(tbl[[text_col]], collapse=FALSE), "\\r\\n")) message("Removed line breaks !")
if(stringr::str_detect(stringr::str_c(tbl[[text_col]], collapse=FALSE), "\\n"))    message("Removed line breaks !")
tbl <-  # remove line breaks
tbl %>%
dplyr::mutate(!!text_col := stringr::str_replace_all(.data[[text_col]], "\\r\\n", "")) %>%
dplyr::mutate(!!text_col := stringr::str_replace_all(.data[[text_col]], "\\n", ""))
tbl <-
tbl %>%
dplyr::select(dplyr::all_of(text_col)) %>%
mecab(bin_dir, tmp_dir, fileEncoding)
tbl <- neko
text_col <- "text"
tmp_dir <- NULL
tbl <- dplyr::mutate(tbl, text_id=1:nrow(tbl))
others <- dplyr::select(tbl, !dplyr::all_of(text_col))
if(stringr::str_detect(stringr::str_c(tbl[[text_col]], collapse=FALSE), "\\r\\n")) message("Removed line breaks !")
if(stringr::str_detect(stringr::str_c(tbl[[text_col]], collapse=FALSE), "\\n"))    message("Removed line breaks !")
tbl <-  # remove line breaks
tbl %>%
dplyr::mutate(!!text_col := stringr::str_replace_all(.data[[text_col]], "\\r\\n", "")) %>%
dplyr::mutate(!!text_col := stringr::str_replace_all(.data[[text_col]], "\\n", ""))
tbl <-
tbl %>%
dplyr::select(dplyr::all_of(text_col)) %>%
mecab(bin_dir, tmp_dir, fileEncoding)
tbl
cnames <- colnames(tbl)
cnames
text_id="text_id"
text_id="text_id"
if (any("text_id" %in% cnames)) stop("colnames must NOT have 'text_id'")
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
)
tbl %>%
dplyr::filter(表層形=="EOS")
tbl %>%
pring(n=50)
tbl %>% print(n=50)
tbl %>% print(n=200)
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have 'text_id'")
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
) %>%
#     dplyr::mutate(tmp = purrr::accumulate(tmp, magrittr::add)) %>%
#     dplyr::mutate(tmp = tmp + 1) %>%
dplyr::mutate(!!"tmp" := purrr::accumulate(!!"tmp", magrittr::add))
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have 'text_id'")
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
) %>%
#     dplyr::mutate(tmp = purrr::accumulate(tmp, magrittr::add)) %>%
#     dplyr::mutate(tmp = tmp + 1) %>%
dplyr::mutate(!!"tmp" := purrr::accumulate(!!"tmp", magrittr::add)) %>%
dplyr::mutate(!!"tmp" := !!"tmp" + 1)
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have 'text_id'")
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
) %>%
#     dplyr::mutate(tmp = purrr::accumulate(tmp, magrittr::add)) %>%
#     dplyr::mutate(tmp = tmp + 1) %>%
dplyr::mutate(!!"tmp" := purrr::accumulate(!!"tmp", magrittr::add)) %>%
dplyr::mutate(!!"tmp" := tmp + 1) %>%
magrittr::set_colnames(c(cnames, text_id))
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have 'text_id'")
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
) %>%
#     dplyr::mutate(tmp = purrr::accumulate(tmp, magrittr::add)) %>%
#     dplyr::mutate(tmp = tmp + 1) %>%
dplyr::mutate(!!"tmp" := purrr::accumulate(!!"tmp", magrittr::add)) %>%
dplyr::mutate(!!"tmp" := as.numeric(tmp) + 1) %>%
magrittr::set_colnames(c(cnames, text_id))
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have 'text_id'")
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
) %>%
#     dplyr::mutate(tmp = purrr::accumulate(tmp, magrittr::add)) %>%
#     dplyr::mutate(tmp = tmp + 1) %>%
dplyr::mutate(!!"tmp" := purrr::accumulate(!!"tmp", magrittr::add)) %>%
dplyr::mutate(!!"tmp" := numeric(tmp) + 1) %>%
magrittr::set_colnames(c(cnames, text_id))
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have 'text_id'")
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
) %>%
#     dplyr::mutate(tmp = purrr::accumulate(tmp, magrittr::add)) %>%
#     dplyr::mutate(tmp = tmp + 1) %>%
dplyr::mutate(!!"tmp" := purrr::accumulate(!!"tmp", magrittr::add))
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have 'text_id'")
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
)
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have 'text_id'")
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
) %>%
#     dplyr::mutate(tmp = purrr::accumulate(tmp, magrittr::add)) %>%
#     dplyr::mutate(tmp = tmp + 1) %>%
dplyr::mutate(!!"tmp" := purrr::accumulate(tmp, magrittr::add)) %>%
dplyr::mutate(!!"tmp" := tmp + 1) %>%
magrittr::set_colnames(c(cnames, text_id))
tbl <- neko
text_col <- "text"
tmp_dir <- NULL
tbl <- dplyr::mutate(tbl, text_id=1:nrow(tbl))
others <- dplyr::select(tbl, !dplyr::all_of(text_col))
if(stringr::str_detect(stringr::str_c(tbl[[text_col]], collapse=FALSE), "\\r\\n")) message("Removed line breaks !")
if(stringr::str_detect(stringr::str_c(tbl[[text_col]], collapse=FALSE), "\\n"))    message("Removed line breaks !")
tbl <-  # remove line breaks
tbl %>%
dplyr::mutate(!!text_col := stringr::str_replace_all(.data[[text_col]], "\\r\\n", "")) %>%
dplyr::mutate(!!text_col := stringr::str_replace_all(.data[[text_col]], "\\n", ""))
tbl <-
tbl %>%
dplyr::select(dplyr::all_of(text_col)) %>%
mecab(bin_dir, tmp_dir, fileEncoding) %>%
add_text_id() %>%
dplyr::left_join(others, by="text_id")
dplyr::slice(-nrow(tbl))
devtools::load_all(".")
tbl <- neko
text_col <- "text"
tmp_dir <- NULL
tbl <- dplyr::mutate(tbl, text_id=1:nrow(tbl))
others <- dplyr::select(tbl, !dplyr::all_of(text_col))
if(stringr::str_detect(stringr::str_c(tbl[[text_col]], collapse=FALSE), "\\r\\n")) message("Removed line breaks !")
if(stringr::str_detect(stringr::str_c(tbl[[text_col]], collapse=FALSE), "\\n"))    message("Removed line breaks !")
tbl <-  # remove line breaks
tbl %>%
dplyr::mutate(!!text_col := stringr::str_replace_all(.data[[text_col]], "\\r\\n", "")) %>%
dplyr::mutate(!!text_col := stringr::str_replace_all(.data[[text_col]], "\\n", ""))
tbl <-
tbl %>%
dplyr::select(dplyr::all_of(text_col)) %>%
mecab(bin_dir, tmp_dir, fileEncoding) %>%
add_text_id() %>%
dplyr::left_join(others, by="text_id")
dplyr::slice(-nrow(tbl))
dplyr::slice(tbl, -nrow(tbl))
bin_dir <- "c:/mecab/bin/" # input your environment
bin_dir <- "d:/pf/mecab/bin/" # input your environment
fileEncoding <- "CP932"    # input your environment
data(neko)
neko <-
neko %>%
dplyr::mutate(text=stringi::stri_unescape_unicode(text)) %>%
dplyr::mutate(cols=1:nrow(.))
mecab_all(neko,
text_col="text",
bin_dir=bin_dir,
fileEncoding=fileEncoding) %>%
print(n=nrow(.))
devtools::load_all(".")
bin_dir <- "c:/mecab/bin/" # input your environment
bin_dir <- "d:/pf/mecab/bin/" # input your environment
fileEncoding <- "CP932"    # input your environment
data(neko)
neko <-
neko %>%
dplyr::mutate(text=stringi::stri_unescape_unicode(text)) %>%
dplyr::mutate(cols=1:nrow(.))
mecab_all(neko,
text_col="text",
bin_dir=bin_dir,
fileEncoding=fileEncoding) %>%
print(n=nrow(.))
devtools::load_all(".")
devtools::load_all(".")
bin_dir <- "c:/mecab/bin/" # input your environment
bin_dir <- "d:/pf/mecab/bin/" # input your environment
fileEncoding <- "CP932"    # input your environment
data(neko)
neko <-
neko %>%
dplyr::mutate(text=stringi::stri_unescape_unicode(text)) %>%
dplyr::mutate(cols=1:nrow(.))
mecab_all(neko,
text_col="text",
bin_dir=bin_dir,
fileEncoding=fileEncoding) %>%
print(n=nrow(.))
bin_dir <- "d:/fp/mecab/bin/" # input your environment
fileEncoding <- "CP932"    # input your environment
data(neko)
neko <-
neko %>%
dplyr::mutate(text=stringi::stri_unescape_unicode(text)) %>%
dplyr::mutate(cols=1:nrow(.))
mecab_all(neko,
text_col="text",
bin_dir=bin_dir,
fileEncoding=fileEncoding) %>%
print(n=nrow(.))
devtools::load_all(".")
bin_dir <- "d:/fp/mecab/bin/" # input your environment
fileEncoding <- "CP932"    # input your environment
data(neko)
neko <-
neko %>%
dplyr::mutate(text=stringi::stri_unescape_unicode(text)) %>%
dplyr::mutate(cols=1:nrow(.))
mecab_all(neko,
text_col="text",
bin_dir=bin_dir,
fileEncoding=fileEncoding) %>%
print(n=nrow(.))
sample
sample(c("aaa", "bbb", "EOS"), 20, replace=TRUE)
tibble::tibble(sample(c("aaa", "bbb", "EOS"), 20, replace=TRUE))
tibble::tibble(text = sample(c("aaa", "bbb", "EOS"), 20, replace=TRUE))
tbl <- tibble::tibble(text = sample(c("a", "b", "EOS"), 20, replace=TRUE))
tbl
tbl
tbl <- tibble::tibble(text = sample(c("a", "b", "EOS"), 20, replace=TRUE))
tbl
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have a colname 'text_id'")
cnames
tbl <-
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
)
tbl <- tibble::tibble(text = sample(c("a", "b", "EOS"), 20, replace=TRUE), some="dammy")
tbl
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have a colname 'text_id'")
tbl <-
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
)
tbl
tbl
tbl <- tibble::tibble(text = c("a", sample(c("a", "b", "EOS"), 20, replace=TRUE)), some="dammy")
tbl
tbl <- tibble::tibble(text = c("a", sample(c("a", "b", "EOS"), 19, replace=TRUE)), some="dammy")
tbl
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
)
tbl <- tibble::tibble(text = c("a", sample(c("a", "b", "EOS"), 19, replace=TRUE)), some=NA)
tbl
tbl <-
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
)
tbl
tbl <- tibble::tibble(text = c("a", sample(c("a", "b", "EOS"), 19, replace=TRUE)), some=NA)
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have a colname 'text_id'")
tbl <-
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
) %>%
dplyr::mutate(!!"tmp" := purrr::accumulate(tmp, magrittr::add))
tbl
tbl <- tibble::tibble(text = c("a", sample(c("a", "b", "EOS"), 19, replace=TRUE)), some=NA)
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have a colname 'text_id'")
tbl <-
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
) %>%
dplyr::mutate(!!"tmp" := purrr::accumulate(.data[["tmp"]], magrittr::add))
tbl
tbl <- tibble::tibble(text = c("a", sample(c("a", "b", "EOS"), 19, replace=TRUE)), some=NA)
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have a colname 'text_id'")
tbl <-
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
) %>%
dplyr::mutate(!!"tmp" := purrr::accumulate(.data[["tmp"]], magrittr::add)) %>%
dplyr::mutate(!!"tmp" := tmp + 1)
tbl
tbl <- tibble::tibble(text = c("a", sample(c("a", "b", "EOS"), 19, replace=TRUE)), some=NA)
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have a colname 'text_id'")
tbl <-
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
) %>%
dplyr::mutate(!!"tmp" := purrr::accumulate(.data[["tmp"]], magrittr::add)) %>%
dplyr::mutate(!!"tmp" := `+`(tmp, 1)
tbl <- tibble::tibble(text = c("a", sample(c("a", "b", "EOS"), 19, replace=TRUE)), some=NA)
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have a colname 'text_id'")
tbl <-
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
) %>%
dplyr::mutate(!!"tmp" := purrr::accumulate(.data[["tmp"]], magrittr::add)) %>%
dplyr::mutate(!!"tmp" := `+`(tmp, 1))
tbl
tbl <- tibble::tibble(text = c("a", sample(c("a", "b", "EOS"), 19, replace=TRUE)), some=NA)
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have a colname 'text_id'")
tbl <-
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
) %>%
dplyr::mutate(!!"tmp" := purrr::accumulate(.data[["tmp"]], magrittr::add)) %>%
dplyr::mutate(!!"tmp" := `+`(tmp, 1)) %>%
#     dplyr::mutate(!!"tmp" := purrr::accumulate(!!"tmp", magrittr::add)) %>%
#     dplyr::mutate(!!"tmp" := !!"tmp" + 1) %>%
magrittr::set_colnames(c(cnames, text_id))
return(tbl)
tbl <- tibble::tibble(text = c("a", sample(c("a", "b", "EOS"), 19, replace=TRUE)), some=NA)
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have a colname 'text_id'")
tbl <-
tbl %>%
dplyr::mutate(!!"tmp" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
) %>%
dplyr::mutate(!!"tmp" := purrr::accumulate(.data[["tmp"]], magrittr::add)) %>%
dplyr::mutate(!!"tmp" := .data[["tmp"]] + 1)
tbl
library(moranajp)
bin_dir <- "d:/fp/mecab/bin/" # input your environment
fileEncoding <- "CP932"    # input your environment
data(neko)
neko <-
neko %>%
dplyr::mutate(text=stringi::stri_unescape_unicode(text)) %>%
dplyr::mutate(cols=1:nrow(.))
mecab_all(neko,
text_col="text",
bin_dir=bin_dir,
fileEncoding=fileEncoding) %>%
print(n=nrow(.))
library(tidyverse)
bin_dir <- "d:/fp/mecab/bin/" # input your environment
fileEncoding <- "CP932"    # input your environment
data(neko)
neko <-
neko %>%
dplyr::mutate(text=stringi::stri_unescape_unicode(text)) %>%
dplyr::mutate(cols=1:nrow(.))
mecab_all(neko,
text_col="text",
bin_dir=bin_dir,
fileEncoding=fileEncoding) %>%
print(n=nrow(.))
tbl <- tibble::tibble(text = c("a", sample(c("a", "b", "EOS"), 19, replace=TRUE)), some=NA)
id="text_id"
cnames <- colnames(tbl)
if (any("text_id" %in% cnames)) stop("colnames must NOT have a colname 'text_id'")
tbl <-
tbl %>%
dplyr::mutate(!!"id" :=
dplyr::case_when((dplyr::select(tbl, 1)=="EOS" & is.na(dplyr::select(tbl, 2))) ~ 1, TRUE ~ 0)
) %>%
dplyr::mutate(!!"id" := purrr::accumulate(.data[["id"]], magrittr::add)) %>%
dplyr::mutate(!!"id" := .data[["id"]] + 1)
tbl
library(moranajp)
data(neko)
neko <-
neko %>%
dplyr::mutate(text=stringi::stri_unescape_unicode(text)) %>%
dplyr::mutate(cols=1:nrow(.))
mecab_all(neko,
text_col="text",
bin_dir=bin_dir,
fileEncoding=fileEncoding) %>%
print(n=nrow(.))
library(tidyverse)
library(tidyverse)
bin_dir <- "c:/mecab/bin/" # input your environment
bin_dir <- "d:/fp/mecab/bin/" # input your environment
fileEncoding <- "CP932"    # input your environment
data(neko)
neko <-
neko %>%
dplyr::mutate(text=stringi::stri_unescape_unicode(text)) %>%
dplyr::mutate(cols=1:nrow(.))
mecab_all(neko,
text_col="text",
bin_dir=bin_dir,
fileEncoding=fileEncoding) %>%
print(n=nrow(.))
neko
neko
tbl <- neko
text_col = "text"
bin_dir = "."
tmp_dir = NULL
fileEncoding=fileEncoding
bin_dir <- "c:/mecab/bin/"
tbl <- dplyr::mutate(tbl, text_id=1:nrow(tbl))
others <- dplyr::select(tbl, !dplyr::all_of(text_col))
if(stringr::str_detect(stringr::str_c(tbl[[text_col]], collapse=FALSE), "\\r\\n")) message("Removed line breaks !")
if(stringr::str_detect(stringr::str_c(tbl[[text_col]], collapse=FALSE), "\\n"))    message("Removed line breaks !")
tbl
others
tbl <-  # remove line breaks
tbl %>%
dplyr::mutate(!!text_col := stringr::str_replace_all(.data[[text_col]], "\\r\\n", "")) %>%
dplyr::mutate(!!text_col := stringr::str_replace_all(.data[[text_col]], "\\n", ""))
tbl
tbl %>%
dplyr::select(dplyr::all_of(text_col)) %>%
mecab(bin_dir, tmp_dir, fileEncoding)
tbl %>%
dplyr::select(dplyr::all_of(text_col))
bin_dir
bin_dir <- "d:/fp/mecab/bin/"
bin_dir <- "d:/fp/mecab/bin/" # input your environment
fileEncoding <- "CP932"    # input your environment
data(neko)
neko <-
neko %>%
dplyr::mutate(text=stringi::stri_unescape_unicode(text)) %>%
dplyr::mutate(cols=1:nrow(.))
mecab_all(neko,
text_col="text",
bin_dir=bin_dir,
fileEncoding=fileEncoding) %>%
print(n=nrow(.))
tbl <- dplyr::mutate(tbl, text_id=1:nrow(tbl))
others <- dplyr::select(tbl, !dplyr::all_of(text_col))
if(stringr::str_detect(stringr::str_c(tbl[[text_col]], collapse=FALSE), "\\r\\n")) message("Removed line breaks !")
if(stringr::str_detect(stringr::str_c(tbl[[text_col]], collapse=FALSE), "\\n"))    message("Removed line breaks !")
tbl <-  # remove line breaks
tbl %>%
dplyr::mutate(!!text_col := stringr::str_replace_all(.data[[text_col]], "\\r\\n", "")) %>%
dplyr::mutate(!!text_col := stringr::str_replace_all(.data[[text_col]], "\\n", ""))
tb;
tlb
tbl
tbl <-
tbl %>%
dplyr::select(dplyr::all_of(text_col))
bin_dir
tmp_dir
fileEncoding
if(is.null(tmp_dir)){tmp_dir <- bin_dir}
tmp_dir
mecab <- stringr::str_c(bin_dir, "mecab", " ")     # NEEDS SPACE after "mecab" for separater
input <- stringr::str_c(tmp_dir, "input.txt")
output <- stringr::str_c(tmp_dir, "output.txt")
utils::write.table(tbl, input, quote=FALSE, col.names=FALSE, row.names=FALSE, fileEncoding=fileEncoding)
utils::write.table
input
utils::write.table(tbl, input, quote=FALSE, col.names=FALSE, row.names=FALSE, fileEncoding=fileEncoding)
library(tidyverse)
bin_dir <- "c:/mecab/bin/" # input your environment
bin_dir <- "d:/pf/mecab/bin/" # input your environment
fileEncoding <- "CP932"    # input your environment
data(neko)
neko <-
neko %>%
dplyr::mutate(text=stringi::stri_unescape_unicode(text)) %>%
dplyr::mutate(cols=1:nrow(.))
mecab_all(neko,
text_col="text",
bin_dir=bin_dir,
fileEncoding=fileEncoding) %>%
print(n=nrow(.))
